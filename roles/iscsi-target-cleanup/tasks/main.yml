### remove each LUNs
## # targetcli /backstores/fileio delete LUN.name
- name: delete the fileio backstore
  command: >-
    targetcli /backstores/fileio delete {{ LUN.name }}
  register: result
  changed_when: result.rc == 0
  failed_when: result.rc != 0 and "No storage object" not in result.stderr
  with_items: "{{ TARGET_LUNS }}"
  loop_control:
    loop_var: LUN

## # targetcli /iscsi delete TARGET_IQN
- name: delete the iscsi target
  command: >-
    targetcli /iscsi delete {{ TARGET_IQN }}
  register: result
  changed_when: result.rc == 0
  failed_when: result.rc != 0 and "No such Target" not in result.stderr

## # targetcli saveconfig
- name: save config
  command: >-
    targetcli saveconfig
  register: result
  changed_when: result.rc == 0
  #failed_when: result.rc != 0 and "XXX" not in result.stderr

## # rm -rf /home/iscsi
- name: remove whole directory for the fileio backstores
  file:
    path: /home/iscsi
    state: absent

### remove firewalld configuration
## # firewall-cmd --permanent --remove-service=iscsi-target
## # firewall-cmd --remove-service=iscsi-target
- name: check if firewalld is enabled
  command: firewall-cmd --state
  changed_when: false
  failed_when: false
  register: firewalld_state

- name: remove firewalld configuration for iSCSI target (permanent)
  command: firewall-cmd --permanent --remove-service=iscsi-target
  register: result
  changed_when: '"NOT_ENABLED" not in result.stderr'
  when: firewalld_state.rc == 0

- name: remove firewalld configuration for iSCSI target (runtime)
  command: firewall-cmd --remove-service=iscsi-target
  register: result
  changed_when: '"NOT_ENABLED" not in result.stderr'
  when: firewalld_state.rc == 0

## # yum erase targetcli # (skip)
#- name: uninstall targetcli package
#  yum:
#    name: targetcli
#    autoremove: yes
#    state: absent

